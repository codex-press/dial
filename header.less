@import "lib/_variables.less";

#dial-menu {

  font-size: 16px;

  & {
    font-family: "Raleway", sans-serif;
    user-select: none;
  }

  .bar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 100000;
    background: #fcfcfc;
    padding: 6px;
    height: 50px;
    transition: transform 0.3s ease-out;
    border-bottom: 1px solid #efefef;
  }

  .bar a {
    text-decoration: none;
    color: @fontColor;
  }

  .bar a:visited {
    text-decoration: none;
    color: @fontColor;
  }

  &:not(.active) .bar.hide {
    transform: translateY(-100%);
  }

  .logo {
    font-family: 'Oswald', sans-serif;
    text-transform: uppercase;
    text-decoration: none;
    font-size: 24px;
    max-width: 100%;
    text-align: center;
  }

  .open {
    position: absolute;
    font-size: 25px !important;
    height: 100%;
    width: 50px;
    padding: 12px 3px;
    text-align: center;
    top: 0;
    left: 0;
    border-right: 1px solid #efefef;
  }

  .open:hover {
  background: #f2f2f2;
 }

  .open,
  .close {
    font-size: 2em;
    cursor: pointer;
    padding-left: 0.1em;
    z-index: 1;
    line-height: 1;
  }

  nav {
    position: fixed;
    top: 0;
    left: 0;
    padding: 0 1em 1em 0.3em;
    font-size: 1.6em;
    height: 100%;
    width: 350px;

    color: black;
    background-color: rgba(260,260,260,0.98);
    line-height: 1.4;
    font-family: 'Raleway', sans-serif;
    font-weight: 600;

    transform: translateX(-100%);
    transform-origin: 0 0;
    transition: transform 250ms ease-in;
    touch-action: pan-y;
    -webkit-user-drag: none;
    z-index: 1000002;
  }


  &.active nav {
    transform: none;
    transition: transform 250ms ease-in;
  }

  &:before {
    content: ' ';
    position: fixed;
    z-index: -100;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0,0,0,0.3);
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease-out, z-index 1s 0s ease-out;
  }

  &.active:before {
    z-index: 1000001;
    opacity: 1;
  }

  nav a {
    display: block;
    text-decoration: none;
    color: inherit;
    padding-left: 1rem;
    outline: none;
  }

  nav a:hover {
    color: @anchorColor;
  }

}

.menu-social {
  padding-top: 2em;
  font-size: 0.8em;
}

.menu-meta {
  padding-top: 2em;
  font-size: 0.7em;
}


//progress bar

*, *::after, *::before {
  box-sizing: border-box;
}

progress {
  /* Positioning */
  position: fixed;
  left: 0;
  top: 0;

  /* Dimensions */
  width: 100%;
  height: .25em;

  /* Reset the apperance */  
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;

  /* Get rid of the default border in Firefox/Opera. */
  border: none;

  /* For Firefox/IE10+ */
  background-color: transparent;

  /* For IE10+, color of the progress bar */
  color: red;
}

progress::-webkit-progress-bar {
  background-color: transparent;
}

.flat::-webkit-progress-value {
  background-color: red;
}

.flat::-moz-progress-bar {
  background-color: red;
}

.single::-webkit-progress-value {
  background-color: transparent;
  background-image: -webkit-linear-gradient(left, transparent, red);
}

.single::-moz-progress-bar {
  background-color: transparent;
  background-image: -moz-linear-gradient(left, transparent, red);
}

.multiple::-webkit-progress-value {
  background-image: -webkit-linear-gradient(-45deg, 
                               transparent 33%, rgba(0, 0, 0, .1) 33%, 
                               rgba(0,0, 0, .1) 66%, transparent 66%),
                      -webkit-linear-gradient(left, green, red);
}

.multiple::-moz-progress-bar {
  background-image: -moz-linear-gradient(-45deg, 
                               transparent 33%, rgba(0, 0, 0, .1) 33%, 
                               rgba(0,0, 0, .1) 66%, transparent 66%),
                      -moz-linear-gradient(left, green, red);
}

.progress-container {
  width: 100%;
  background-color: transparent;
  position: fixed;
  top: 51px;
  left: 0;
  height: .25em;
  display: block;
}

.progress-bar {
  background-color: red;
  width: 50%;
  display: block;
  height: inherit;
}




