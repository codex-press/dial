
.gradient.fill {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0;
  z-index: 1;
}


.gradient.translucent { opacity: 0.5; }
.gradient.blend-multiply { mix-blend-mode: multiply; }
.gradient.blend-screen { mix-blend-mode: screen; }
.gradient.blend-overlay { mix-blend-mode: overlay; }
.gradient.blend-darken { mix-blend-mode: darken; }
.gradient.blend-lighten { mix-blend-mode: lighten; }
.gradient.blend-dodge { mix-blend-mode: color-dodge; }
.gradient.blend-burn { mix-blend-mode: color-burn; }
.gradient.blend-hard { mix-blend-mode: hard-light; }
.gradient.blend-soft { mix-blend-mode: soft-light; }
.gradient.blend-difference { mix-blend-mode: difference; }
.gradient.blend-exclusion { mix-blend-mode: exclusion; }
.gradient.blend-hue { mix-blend-mode: hue; }
.gradient.blend-saturation { mix-blend-mode: saturation; }
.gradient.blend-color { mix-blend-mode: color; }
.gradient.blend-luminosity { mix-blend-mode: luminosity; }


// fallback for those is just 50% opacity
html.no-mix-blend-mode {

  .gradient.blend-multiply,
  .gradient.blend-screen,
  .gradient.blend-overlay,
  .gradient.blend-darken,
  .gradient.blend-lighten,
  .gradient.blend-dodge,
  .gradient.blend-burn,
  .gradient.blend-hard,
  .gradient.blend-soft,
  .gradient.blend-difference,
  .gradient.blend-exclusion,
  .gradient.blend-hue,
  .gradient.blend-saturation,
  .gradient.blend-color,
  .gradient.blend-luminosity {
    opacity: 0.5;

  }
}

.gradient.text {
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

// feature detected
html.no-background-clip {
  .gradient.text {
    background: none !important;
    -webkit-background-clip: initial !important;
    -webkit-text-fill-color: initial !important;
  }
}


.gradient-parent {
  position: relative;
  overflow: hidden;
}

.red.gradient {
  -webkit-filter: url(#duotone);
  filter:  url(#duotone);
}

.defs-only {
  position: absolute;
  height: 0; width: 0;
  overflow: none;
  left: -100%;
}

// mixin to generate all styles with given rotation
.gradients(@sel, @deg) {

  //.red.gradient@{sel} {
    //background-image: linear-gradient(@deg, crimson, black);
    //mix-blend-mode: multiply;
    //opacity: 0.7;
  //}

  .blue.gradient@{sel}{
    background-image: linear-gradient(@deg, navy, black);

  }

  .darken.gradient@{sel}{
    background-image: linear-gradient(@deg, black, black);
    opacity: 0.3;
  }

}

.gradients(~'', ~'0deg');
.gradients(~'.rotate-45', ~'45deg');
.gradients(~'.rotate-90', ~'90deg');
.gradients(~'.rotate-135', ~'135deg');
.gradients(~'.rotate-180', ~'180deg');
.gradients(~'.rotate-225', ~'225deg');
.gradients(~'.rotate-270', ~'270deg');
.gradients(~'.rotate-315', ~'325deg');



// Animation
// ---------

.gradient.revolve,
.gradient.revolve-reverse {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  animation-name: gradient-revolve;
  animation-duration: 3s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

.gradient.revolve-reverse {
  animation-direction: reverse;
};

@keyframes gradient-revolve {
  0%   { transform: scale(2) translate(-25%, -25%); }
  25%  { transform: scale(2) translate(-25%, 25%); }
  50%  { transform: scale(2) translate(25%, 25%); }
	75%  { transform: scale(2) translate(25%, -25%); }
  100% { transform: scale(2) translate(-25%, -25%); }
}


.gradient.pan,
.gradient.pan-vertical {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  animation-duration: 3s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}
.gradient.pan {
  animation-name: gradient-pan;
}
@keyframes gradient-pan {
  from { transform: scale(3,1) translateX(-33%); }
  to   { transform: scale(3,1) translateX(33%); }
}


.gradient.pan-vertical {
  animation-name: gradient-pan-vertical;
}

@keyframes gradient-pan-vertical {
  from { transform: scale(1,3) translateY(-33%); }
  to   { transform: scale(1,3) translateY(33%); }
}


.gradient.pan-continuous {
  position: absolute;
  top: 0;
  left: 0;
  width: 200%;
  height: 100%;
  background-size: 50% 100%;
  background-repeat: repeat;
  animation-name: gradient-pan-continuous;
  animation-duration: 3s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

@keyframes gradient-pan-continuous {
  from { transform: translateX(0%); }
  to   { transform: translateX(-50%); }
}



.gradient.fast {
  animation-duration: 2s;
}

.gradient.slow {
  animation-duration: 4s;
}

.gradient.slower {
  animation-duration: 6s;
}
